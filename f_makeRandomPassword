#!/bin/bash
# ________________________________
#
# Name:
# f_makeRandomPassword
#
# Author:
# Matthew James Hulme
#
# Usage:
# thisDirectory=${BASH_SOURCE%/*}
# [ -r $thisDirectory"/f_makeRandomPassword" ] && source $thisDirectory"/f_makeRandomPassword"
# makeRandomPassword | makeRandomPassword length | makeRandomPassword length character_set_number
#
# Description:
# Function for use elsewhere.
# Generates randomised passwords with a default length of 16 characters.
#
# Notes:
# Input		Character Set
# 1)		"a-zA-Z0-9"
# 2)		"a-zA-Z0-9@#$%^*!&()"
# 3)		"a-zA-Z0-9@#$%^*,.-_~=+;:'`!&()"
# *)		"a-zA-Z0-9@#$%^*[]?,.-_~=+;:'`<>!&(){}|\/"
#
# Dependencies:
#
# ________________________________
#
function makeRandomPassword()
{
	local charactersAllowed="a-zA-Z"
	if [ -z $2 ];then
	{
		# Set default character set to:
		#+a-zA-Z0-9@#$%^*[]?,.-_~=+;:'`<>!&(){}|\/
		#+unless there was a 2nd input.
		charactersAllowed="a-zA-Z0-9@#$%^*[]?,.-_~=+\;\:\'\`\<\>\!\&\(\)\{\}\|\\\/"
	}
	else
	{
		local inputValue2=$2
		case "$inputValue2" in
		1)
			charactersAllowed="a-zA-Z0-9"
		;;
		2)
			charactersAllowed="a-zA-Z0-9@#$%^*\!\&\(\)"
		;;
		3)
			charactersAllowed="a-zA-Z0-9@#$%^*,.-_~=+\;\:\'\`\!\&\(\)"
		;;
		*)
			charactersAllowed="a-zA-Z0-9@#$%^*[]?,.-_~=+\;\:\'\`\<\>\!\&\(\)\{\}\|\\\/"
		;;
		esac
	}
	fi
	# Filter length to only have digits,
	#+if null, set to default.
	passwordLength=$( echo -n "$1" | grep -oE "[[:digit:]]" | tr -d '\n\r' )
	[ -z "$passwordLength" ] && local passwordLength="16"
	echo "Password:"
	cat /dev/urandom | tr -cd "$charactersAllowed" | head -c "$passwordLength"
	echo
	return 0
}


